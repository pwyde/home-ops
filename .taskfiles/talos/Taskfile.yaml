---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

tasks:

  generate-config:
    desc: Generate Talos configuration
    dir: '{{.TALOS_DIR}}'
    prompt: This will generate Talos configuration... Continue?
    vars:
      SECRET_FILES:
        sh: find "{{.TALOS_DIR}}" -type f -name '*.sops.yaml' ! -name ".sops.yaml"
    cmds:
      - for: {var: SECRET_FILES}
        cmd: |
          # Enhance security by encrypting all unencrypted secrets.
          if sops filestatus "{{.ITEM}}" | jq --exit-status ".encrypted == false" &>/dev/null; then
              echo "Encrypting {{ .ITEM }}"
              sops --encrypt --in-place "{{.ITEM}}"
          fi
      - talhelper genconfig
    preconditions:
      - test -f {{.TALOS_DIR}}/talconfig.yaml
      - test -f {{.TALOS_DIR}}/talenv.sops.yaml
      - test -f {{.TALOS_DIR}}/talsecret.sops.yaml
      - test -f {{.ROOT_DIR}}/.sops.yaml
      - test -f {{.SOPS_AGE_KEY_FILE}}
      - which talhelper sops

  reset-cluster:
    desc: Reset the whole Talos cluster, --force wipes the entire disk
    prompt: This will destroy the cluster and reset ALL nodes back to maintenance mode... Continue?
    dir: '{{.TALOS_DIR}}'
    cmds:
      - |
        {{if .CLI_FORCE}}
          # Wipes the entire disk.
          talhelper gencommand reset --extra-flags="--reboot --graceful=false --wait=false" | bash
        {{else}}
          # Only wipe the STATE and EPHEMERAL partitions.
          talhelper gencommand reset --extra-flags="--reboot --system-labels-to-wipe STATE --system-labels-to-wipe EPHEMERAL --graceful=false --wait=false" | bash
        {{end}}
    preconditions:
      - which talhelper
