---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

vars:
  BOOTSTRAP_RESOURCES_DIR: "{{.ROOT_DIR}}/.taskfiles/bootstrap/resources"

tasks:

  age-keygen:
    desc: Bootstrap the SOPS age key and update configuration file, '--force' creates new key
    cmds:
      - |
        # Backup existing SOPS_AGE_KEY_FILE and {{.ROOT_DIR}}/.sops.yaml if '--force' flag is used.
        {{if .CLI_FORCE}}
          if [ -f {{.SOPS_AGE_KEY_FILE}} ]; then
            cp {{.SOPS_AGE_KEY_FILE}} {{.SOPS_AGE_KEY_FILE}}.bak
            rm {{.SOPS_AGE_KEY_FILE}}
          fi
          if [ -f {{.ROOT_DIR}}/.sops.yaml ]; then
            cp {{.ROOT_DIR}}/.sops.yaml {{.ROOT_DIR}}/.sops.yaml.bak
            rm {{.ROOT_DIR}}/.sops.yaml
          fi
        {{end}}
      - |
        # Copy the SOPS configuration template file to {{.ROOT_DIR}}/.sops.yaml
        cp {{.BOOTSTRAP_RESOURCES_DIR}}/.sops.tmpl.yaml {{.ROOT_DIR}}/.sops.yaml
      - |
        # Generate new age key.
        age-keygen --output {{.SOPS_AGE_KEY_FILE}}
      - |
        # Extract public key from the generated age key.
        PUBLIC_KEY=$(awk '/public key:/ {print $NF}' {{.SOPS_AGE_KEY_FILE}})
        # Inject the public key into the SOPS configuration file using yq.
        yq eval ".creation_rules[].key_groups[].age = [\"$PUBLIC_KEY\"]" -i {{.ROOT_DIR}}/.sops.yaml
    status:
      - test -f {{.ROOT_DIR}}/.sops.yaml
      - test -f {{.SOPS_AGE_KEY_FILE}}
    preconditions:
      - which age-keygen yq

  talos:
    desc: Bootstrap the Talos cluster
    dir: '{{.TALOS_DIR}}'
    prompt: Bootstrap the Talos cluster... Continue?
    cmds:
      - '[ -f talsecret.sops.yaml ] || talhelper gensecret | sops --filename-override talos/talsecret.sops.yaml --encrypt /dev/stdin > talsecret.sops.yaml'
      - talhelper genconfig
      - talhelper gencommand apply --extra-flags="--insecure" | bash
      - until talhelper gencommand bootstrap | bash; do sleep 10; done
      - until talhelper gencommand kubeconfig --extra-flags="{{.KUBERNETES_DIR}} --force" | bash; do sleep 10; done
    preconditions:
      - test -f {{.ROOT_DIR}}/.sops.yaml
      - test -f {{.SOPS_AGE_KEY_FILE}}
      - test -f {{.TALOS_DIR}}/talconfig.yaml
      - which talhelper talosctl sops

  apps:
    desc: Bootstrap apps into the Talos cluster
    prompt: Bootstrap apps into Talos cluster... Continue?
    cmd: bash {{.SCRIPTS_DIR}}/bootstrap-apps.sh
    preconditions:
      - test -f {{.KUBECONFIG}}
      - test -f {{.ROOT_DIR}}/.sops.yaml
      - test -f {{.SCRIPTS_DIR}}/bootstrap-apps.sh
      - test -f {{.SOPS_AGE_KEY_FILE}}
