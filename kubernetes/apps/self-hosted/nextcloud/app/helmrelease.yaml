---
# yaml-language-server: $schema=https://crd.movishell.pl/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app nextcloud
spec:
  interval: 30m
  chart:
    spec:
      chart: nextcloud
      version: 6.6.3
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: democratic-csi-nfs
      namespace: storage
  values:
    podAnnotations:
      reloader.stakater.com/auto: "true"
    image:
      # repository: public.ecr.aws/docker/library/nextcloud
      # flavor: apache
      repository: nextcloud
      flavor: apache
      tag: 30.0.5-apache
      pullPolicy: IfNotPresent
    phpClientHttpsFix:
      enabled: true
    nextcloud:
      host: &host nc.${SECRET_DOMAIN}
      extraInitContainers:
        - name: init-db
          image: ghcr.io/onedr0p/postgres-init:16
          envFrom:
            - secretRef:
                name: *app
      extraEnv:
        - name: REDIS_HOST
          value: dragonfly.database.svc.cluster.local
        - name: REDIS_HOST_PORT
          value: "6379"
        - name: REDIS_DATABASE
          value: "5"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: *app
              key: REDIS_PASSWORD
      existingSecret:
        enabled: true
        secretName: *app
        usernameKey: ADMIN_USER
        passwordKey: ADMIN_PASS
        tokenKey: METRICS_TOKEN
        smtpHostKey: SMTP_HOST
        smtpUsernameKey: SMTP_USERNAME
        smtpPasswordKey: SMTP_PASSWORD
      mail:
        enabled: true
        fromAddress: *app
        domain: "${SECRET_DOMAIN}"
        smtp:
          secure: ssl
          port: 465
          authtype: LOGIN
      defaultConfigs:
        .htaccess: true                         # Default .htaccess to protect /var/www/html/config.
        apache-pretty-urls.config.php: true     # Default Apache configuration for rewrite URLs.
        apcu.config.php: true                   # Default configuration to define APCu as local cache.
        apps.config.php: true                   # Default configuration for apps.
        autoconfig.php: false                   # Default auto-configuration for databases. Set to false, use CNPG instead.
        redis.config.php: false                 # Default Redis configuration. Set to false, use Dragonfly instead.
        reverse-proxy.config.php: true          # Default reverse proxy configuration.
        s3.config.php: false                    # Default configuration for S3 as primary Object Storage. Set to false, not in use.
        smtp.config.php: true                   # Default configuration for SMTP.
        swift.config.php: false                 # Default configuration for Swift as primary Object Storage. Set to false, not in use.
        upgrade-disable-web.config.php: true    # Default config to disable the web-based updater as the default docker image does not suppor it.
      configs:
        # Log levels: 0=debug, 1=info, 2=warn, 3=error, 4=fatal
        logging.config.php: |-
          <?php
          $CONFIG = array (
            'log_type' => 'file',
            'logfile' => 'nextcloud.log',
            'loglevel' => 0,
            'logdateformat' => 'F d, Y H:i:s'
          );
        custom.config.php: |-
          <?php
          $CONFIG = array (
            'overwriteprotocol' => 'https',
            'overwrite.cli.url' => 'https://nc.${SECRET_DOMAIN}',
            'filelocking.enabled' => 'true',
            'loglevel' => '2',
            'enable_previews' => true,
            'trusted_domains' =>
              [
                'nextcloud',
                'nc.${SECRET_DOMAIN}'
              ],
            'trusted_proxies' =>
              [
                '10.69.0.0/16',
              ],
            'forwarded_for_headers' =>
              [
                0 => 'X-Forwarded-For',
                1 => 'HTTP_X_FORWARDED_FOR'
              ],
            'default_phone_region' => 'SE',
            'allow_local_remote_servers' => true,
            'bulkupload.enabled' => true,
          );
        # misc.config.php: |-
        #   <?php
        #   $CONFIG = array (
        #     'overwrite.cli.url' => 'https://nc.${SECRET_DOMAIN}',
        #     'default_phone_region' => 'SE',
        #     'trashbin_retention_obligation' => 'auto, 30',
        #     'auth.bruteforce.protection.enabled' => true,
        #   );
        # proxy.config.php: |-
        #   <?php
        #   $CONFIG = array (
        #     'trusted_proxies' => array(
        #       0 => '127.0.0.1',
        #       1 => '${CLUSTER_POD_CIDR}',
        #     ),
        #     'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),
        #   );
        redis.config.php: |-
          <?php
            $CONFIG = array (
              'memcache.distributed' => '\OC\Memcache\Redis',
              'memcache.locking' => '\OC\Memcache\Redis',
              'redis' => array(
                'host' => getenv('REDIS_HOST'),
                'port' => getenv('REDIS_HOST_PORT') ?: 6379,
                'dbindex' => getenv('REDIS_DATABASE') ?: 0,
                'password' => getenv('REDIS_PASSWORD'),
              )
            );
      phpConfigs:
        uploadLimit.ini: |
          upload_max_filesize = 16G
          post_max_size = 16G
          max_input_time = 3600
          max_execution_time = 3600
    persistence:
      enabled: true
      existingClaim: ${VOLSYNC_CLAIM}
    resources:
      requests:
        cpu: 200m
        memory: 384Mi
      limits:
        memory: 2Gi
    # This seems to be required for Nextcloud initialization which takes a long time.
    startupProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 360
      successThreshold: 1
    livenessProbe: &probes
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    readinessProbe: *probes
    ingress:
      enabled: true
      className: internal
      # annotations:
      #   nginx.ingress.kubernetes.io/affinity: cookie
      #   nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"
      #   nginx.ingress.kubernetes.io/enable-cors: "true"
      #   nginx.ingress.kubernetes.io/server-snippet: |-
      #     server_tokens off;
      #     proxy_hide_header X-Powered-By;
      #     rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
      #     rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
      #     rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
      #     rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
      #     location = /.well-known/carddav {
      #       return 301 $scheme://$host/remote.php/dav;
      #     }
      #     location = /.well-known/caldav {
      #       return 301 $scheme://$host/remote.php/dav;
      #     }
      #     location = /robots.txt {
      #       allow all;
      #       log_not_found off;
      #       access_log off;
      #     }
      #     location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
      #       deny all;
      #     }
      #     location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
      #       deny all;
      #     }
      path: /
      pathType: Prefix
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      database: nextcloud
      existingSecret:
        enabled: true
        secretName: *app
        hostKey: POSTGRES_HOST
        databaseKey: POSTGRES_DB
        usernameKey: POSTGRES_USER
        passwordKey: POSTGRES_PASSWORD
    redis:
      enabled: false
    metrics:
      enabled: false
      https: true
      serviceMonitor:
        enabled: false
    cronjob:
      enabled: true
