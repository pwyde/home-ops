---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app qbittorrent
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: democratic-csi-nfs
      namespace: storage
    - name: generic-device-plugin
      namespace: system
  values:
    controllers:
      qbittorrent:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          qbittorrent:
            image:
              repository: ghcr.io/onedr0p/qbittorrent
              tag: 5.0.3@sha256:ef7b54df65ed34aec0809024061fc55b322cc8b3882dfebde499fb3f50f5bb62
            env:
              TZ: &tz ${CONFIG_TIMEZONE}
              QBITTORRENT__PORT: &port 80
              QBITTORRENT__BT_PORT: &bittorrentPort ${SVC_QBITTORRENT_PORT}
              # Settings based on https://trash-guides.info/Downloaders/qBittorrent/.
              # Settings > Advanced > Physical memory (RAM) usage limit (libtorrent >=2.0).
              QBT_Application__MemoryWorkingSetLimit: 10000
              # Settings > Speed > Alternative Rate Limits > Download.
              QBT_BitTorrent__Session__AlternativeGlobalDLSpeedLimit: 7812
              # Settings > Speed > Alternative Rate Limits > Upload.
              QBT_BitTorrent__Session__AlternativeGlobalUPSpeedLimit: 1171
              # Settings > Advanced > Security > Always announce to all trackers in a tier.
              QBT_BitTorrent__Session__AnnounceToAllTrackers: true
              # Settings > Connection > Peer connection protocl.
              QBT_BitTorrent__Session__BTProtocol: TCP
              # Settings > Speed > Schedule the use of alternative rate limits.
              QBT_BitTorrent__Session__BandwidthSchedulerEnabled: true
              # Settings > Downlods > Saving Management > Default Save Path (complete).
              QBT_BitTorrent__Session__DefaultSavePath: /data/Downloads/Torrents
              # Settings > Downloads > Saving Management > Default Torrent Management Mode. This will set it to "Automatic".
              QBT_BitTorrent__Session__DisableAutoTMMByDefault: false
              # Settings > Downloads > Saving Management > When Category Save Path changed. This will set it to "Relocate torrent".
              QBT_BitTorrent__Session__DisableAutoTMMTriggers__CategorySavePathChanged: false
              # Settings > Downloads > Saving Management > When Default Save Path changed. This will set it to "Relocate torrent".
              QBT_BitTorrent__Session__DisableAutoTMMTriggers__DefaultSavePathChanged: false
              # Settings > Downlods > Saving Management > Copy torrent files for finished downloads to.
              QBT_BitTorrent__Session__FinishedTorrentExportDirectory: /config/qBittorrent/torrent_files
              # Settings > BitTorrent > Speed Limits > When ratio reaches.
              QBT_BitTorrent__Session__GlobalMaxRatio: 10
              # Settings > Advanced > Networking > Network interface.
              # QBT_BitTorrent__Session__Interface: eth0
              # # Settings > Advanced > Networking > Optional IP address to bind to.
              # QBT_BitTorrent__Session__InterfaceAddress:
              #   valueFrom:
              #     fieldRef:
              #       fieldPath: status.podIP
              # QBT_BitTorrent__Session__InterfaceName: eth0
              # Settings > BitTorrent > Privacy > Enable Local Peer Discovery to find more peers.
              QBT_BitTorrent__Session__LSDEnabled: false
              # Settings > BitTorrent > Torrent Queueing > Maximum active downloads.
              QBT_BitTorrent__Session__MaxActiveDownloads: 100
              # Settings > BitTorrent > Torrent Queueing > Maximum active torrents.
              QBT_BitTorrent__Session__MaxActiveTorrents: 200
              # Settings > BitTorrent > Torrent Queueing > Maximum active uploads.
              QBT_BitTorrent__Session__MaxActiveUploads: 200
              # Settings > Connection > Connection Limits > Global maximum number of connections.
              QBT_BitTorrent__Session__MaxConnections: -1
              # Settings > Connection > Connection Limits > Maximum number of connections per torrent.
              QBT_BitTorrent__Session__MaxConnectionsPerTorrent: -1
              # Settings > BitTorrent > Seed Limits > Then: Enable super seeding for torrent.
              QBT_BitTorrent__Session__MaxRatioAction: 2
              # Settings > Connection > Connection Limits > Global maximum number of upload slots.
              QBT_BitTorrent__Session__MaxUploads: -1
              # Settings > Connection > Connection Limits > Maximum number of upload slots per torrent.
              QBT_BitTorrent__Session__MaxUploadsPerTorrent: -1
              # Settings > Advanced > Reannounce to all trackers when IP or port changed.
              QBT_BitTorrent__Session__ReannounceWhenAddressChanged: true
              # Settings > Connection > Use UPnP / NAT-PMP port forwarding from my router.
              QBT_Network__PortForwardingEnabled: false
              # Settings > Speed > When.
              QBT_Preferences__Scheduler__days: EveryDay
              # Settings > Speed > To.
              QBT_Preferences__Scheduler__end_time: '@Variant(\0\0\0\xf\0m\xdd\0)'
              # Settings > Speed > From.
              QBT_Preferences__Scheduler__start_time: '@Variant(\0\0\0\xf\x1\x80\x85\x80)'
              # Settings > WebUI > Bypass authentication for clients in whitelisted IP subnets. This will enable the setting.
              QBT_Preferences__WebUI__AuthSubnetWhitelistEnabled: true
              # Settings > WebUI > Bypass authentication for clients in whitelisted IP subnets.
              QBT_Preferences__WebUI__AuthSubnetWhitelist: |-
                ${CLUSTER_POD_CIDR}, ${NET_LOCAL_CIDR}
              # Settings > WebUI > Use Alternative WebUI.
              QBT_Preferences__WebUI__AlternativeUIEnabled: true
              # Settings > WebUI > Use Alternative WebUI.
              QBT_Preferences__WebUI__RootFolder: /addons/VueTorrent
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/v2/app/version
                    port: *port
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 10
                  failureThreshold: 5
              readiness: *probes
            resources:
              requests:
                cpu: 100m
                memory: 2Gi
              limits:
                memory: 6Gi
            securityContext:
              runAsNonRoot: true
              runAsUser: &uid 5000
              runAsGroup: *uid
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
          gluetun:
            image:
              repository: ghcr.io/qdm12/gluetun
              tag: v3.40.0@sha256:8ec31c4b83e1f3173d43728f78a4a7ad45237fef366a4b5461e5aee93f517fba
            env:
              TZ: *tz
              # Ports to allow through the default interface. This is needed for Kubernetes sidecars.
              FIREWALL_INPUT_PORTS: "80,9999"
              # Ports to allow from the VPN server side.
              FIREWALL_VPN_INPUT_PORTS: *bittorrentPort
              # Allow access to K8s subnets.
              FIREWALL_OUTBOUND_SUBNETS: ${CLUSTER_POD_CIDR},${CLUSTER_SVC_CIDR}
              # Internal health check server listening address.
              HEALTH_SERVER_ADDRESS: ":9999"
              VPN_SERVICE_PROVIDER: custom
              VPN_TYPE: wireguard
              VPN_INTERFACE: wg0
            envFrom:
              - secretRef:
                  name: *app
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: 9999
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 10
                  failureThreshold: 5
              startup: *probes
            resources:
              requests:
                cpu: 100m
                memory: 512Mi
                # Request the /dev/net/tun device that is exposed on the node
                # using generic-device-plugin. For more information, see:
                # - https://www.talos.dev/v1.8/introduction/what-is-new/#accessing-devnettun-in-kubernetes-pods
                # - https://www.talos.dev/v1.8/kubernetes-guides/configuration/device-plugins/
                squat.ai/tun: "1"
              limits:
                memory: 768Mi
                squat.ai/tun: "1"
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { add: ["NET_ADMIN"] }
          vuetorrent:
            dependsOn: qbittorrent
            image:
              repository: registry.k8s.io/git-sync/git-sync
              tag: v4.4.0
            args:
              - --repo=https://github.com/WDaan/VueTorrent
              - --ref=latest-release
              - --period=86400s
              - --root=/addons
            resources:
              requests:
                cpu: 10m
                memory: 32Mi
              limits:
                memory: 64Mi
    defaultPodOptions:
      securityContext:
        fsGroup: &gid 4000
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [*gid]
    service:
      app:
        controller: *app
        type: LoadBalancer
        annotations:
          lbipam.cilium.io/ips: ${SVC_QBITTORRENT_IP}
        ports:
          http:
            port: *port
          # qBitTorrent startup probe will fail if enabled.
          # bittorrent:
          #   enabled: true
          #   port: *bittorrentPort
          #   protocol: TCP
          #   targetPort: *bittorrentPort
    ingress:
      app:
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths: &paths
              - path: /
                service:
                  identifier: app
                  port: http
          - host: &customHost qbit.${SECRET_DOMAIN}
            paths: *paths
        tls:
          - hosts:
              - *host
              - *customHost
    persistence:
      addons:
        type: emptyDir
      config:
        existingClaim: ${VOLSYNC_CLAIM}
      config-categories:
        type: secret
        name: qbittorrent-categories
        globalMounts:
          - path: /config/qBittorrent/categories.json
            subPath: categories.json
            readOnly: true
      media:
        type: nfs
        server: ${SECRET_NAS_IP}
        path: ${SECRET_NFS_PATH_MEDIA}
        globalMounts:
          - path: /data

