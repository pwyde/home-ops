---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app flaresolverr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      flaresolverr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          flaresolverr:
            image:
              repository: ghcr.io/flaresolverr/flaresolverr
              tag: v3.3.22@sha256:4cfcff3e93f86eab2131e263322f2ef0d25fc362d450f67acfb6bcda687748e9
            env:
              TZ: ${CONFIG_TIMEZONE}
              LANG: en_GB
              LOG_LEVEL: info
              LOG_HTML: false
              PORT: &port 8191
              PROMETHEUS_ENABLED: true
              PROMETHEUS_PORT: &metricsPort 8192
              TEST_URL: https://www.google.com
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 50m
                memory: 256Mi
              limits:
                memory: 768Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid 1000
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
          metrics:
            port: *metricsPort
            protocol: TCP
            targetPort: *metricsPort
    serviceMonitor:
      app:
        serviceName: *app
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
