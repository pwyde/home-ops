---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app audiobookshelf
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: democratic-csi-iscsi
      namespace: storage
  values:
    controllers:
      audiobookshelf:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          audiobookshelf:
            image:
              repository: ghcr.io/advplyr/audiobookshelf
              tag: 2.17.7@sha256:7ccc11318c1ad93c4325061b6c42ed6038fcd97eda4619e520373606b7f5814c
            env:
              TZ: ${CONFIG_TIMEZONE}
              CONFIG_PATH: /config
              METADATA_PATH: /config/metadata
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthcheck
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                memory: 256Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid 5000
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [4000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths: &paths
              - path: /
                service:
                  identifier: app
                  port: http
          - host: &customHost ljudbok.${SECRET_DOMAIN}
            paths: *paths
        tls:
          - hosts:
              - *host
              - *customHost
    persistence:
      cache:
        type: emptyDir
        globalMounts:
          - path: /.npm
      config:
        existingClaim: ${VOLSYNC_CLAIM}
      media:
        type: nfs
        server: ${SECRET_NAS_IP}
        path: ${SECRET_NFS_PATH_MEDIA}
        globalMounts:
          - path: /data
            readOnly: true
