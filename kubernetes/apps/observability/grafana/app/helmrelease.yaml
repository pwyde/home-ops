---
# yaml-language-server: $schema=https://home-kubernetes-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1beta2.json
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: OCIRepository
metadata:
  name: grafana
spec:
  interval: 5m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 9.2.1
  url: oci://ghcr.io/grafana/helm-charts/grafana
---
# yaml-language-server: $schema=https://home-kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app grafana
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: grafana
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    annotations:
      secret.reloader.stakater.com/reload: *app
    extraInitContainers:
      - name: 01-init-db
        image: ghcr.io/home-operations/postgres-init:17
        envFrom:
          - secretRef:
              name: *app
    env:
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_ANGULAR_SUPPORT_ENABLED: true
      GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION: true
    envFromSecrets:
      - name: *app
    admin:
      existingSecret: *app
      userKey: adminUser
      passwordKey: adminPass
    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      auth:
        oauth_auto_login: true
        signout_redirect_url: https://authentik.${SECRET_DOMAIN}/application/o/grafana/end-session/
        oauth_allow_insecure_email_lookup: true
      auth.basic:
        enabled: false
      auth.anonymous:
        enabled: false
      auth.generic_oauth:
        enabled: true
        name: ${SECRET_DOMAIN}
        icon: signin
        auth_url: https://authentik.${SECRET_DOMAIN}/application/o/authorize/
        token_url: https://authentik.${SECRET_DOMAIN}/application/o/token/
        api_url: https://authentik.${SECRET_DOMAIN}/application/o/userinfo/
        scopes: openid profile email
        use_pkce: true
      auth.generic_oauth.group_mapping:
        role_attribute_path: |
          contains(groups[*], 'Infrastructure') && 'Admin' || 'Viewer'
        org_id: 1
      news:
        news_feed_enabled: false
      server:
        root_url: https://grafana.${SECRET_DOMAIN}
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: database
            orgId: 1
            folder: Database
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/database-folder
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default-folder
          - name: downloads
            orgId: 1
            folder: Downloads
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/downloads-folder
          - name: flux
            orgId: 1
            folder: Flux
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux-folder
          - name: kubernetes
            orgId: 1
            folder: Kubernetes
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes-folder
          - name: media
            orgId: 1
            folder: Media
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/media-folder
          - name: network
            orgId: 1
            folder: Network
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/network-folder
          - name: prometheus
            orgId: 1
            folder: Prometheus
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/prometheus-folder
          - name: security
            orgId: 1
            folder: Security
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/security-folder
          - name: storage
            orgId: 1
            folder: Storage
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/storage-folder
          - name: system
            orgId: 1
            folder: System
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/system-folder
          - name: unifi
            orgId: 1
            folder: UniFi
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/unifi-folder
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - { name: Alertmanager, orgId: 1 }
          - { name: Loki, orgId: 1 }
          - { name: Prometheus, orgId: 1 }
        datasources:
          - name: Prometheus
            type: prometheus
            uid: prometheus
            access: proxy
            url: http://prometheus-operated.observability.svc.cluster.local:9090
            jsonData:
              timeInterval: 30s
            isDefault: true
          - name: Loki
            type: loki
            uid: loki
            access: proxy
            url: http://loki-headless.observability.svc.cluster.local:3100
            jsonData:
              maxLines: 250
          - name: Alertmanager
            type: alertmanager
            uid: alertmanager
            access: proxy
            url: http://alertmanager-operated.observability.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
    dashboards:
      database:
      default:
      downloads:
        flaresolverr:
          # renovate: depName="FlareSolverr"
          gnetId: 19363
          revision: 1
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        qbittorrent-exporter:
          url: https://raw.githubusercontent.com/pwyde/home-ops/main/kubernetes/apps/observability/grafana/app/resources/qbittorrent.json
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/logs.json
          datasource: Loki
      kubernetes:
        kubernetes-api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 19
          datasource: Prometheus
        kubernetes-coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 20
          datasource: Prometheus
        kubernetes-global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 43
          datasource: Prometheus
        kubernetes-namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 42
          datasource: Prometheus
        kubernetes-nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 35
          datasource: Prometheus
        kubernetes-pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gnetId: 15760
          revision: 36
          datasource: Prometheus
        kubernetes-volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
      media:
        exportarr:
          url: https://raw.githubusercontent.com/pwyde/home-ops/main/kubernetes/apps/observability/grafana/app/resources/exportarr.json
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        unpackerr:
          url: https://raw.githubusercontent.com/pwyde/home-ops/main/kubernetes/apps/observability/grafana/app/resources/unpackerr.json
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
      network:
        blackbox-exporter:
          # renovate: depName="Prometheus Blackbox Exporter"
          gnetId: 7587
          revision: 3
          datasource: Prometheus
        cloudflared:
          # renovate: depName="Cloudflare Tunnels (cloudflared)"
          gnetId: 17457
          revision: 6
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        nginx:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        nginx-request-handling-performance:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
          datasource: Prometheus
      prometheus:
        prometheus:
          # renovate: depName="Prometheus"
          gnetId: 19105
          revision: 7
          datasource: Prometheus
      security:
        authentik:
          # renovate: depName="authentik"
          gnetId: 14837
          revision: 2
          datasource: Prometheus
        cert-manager:
          url: https://raw.githubusercontent.com/pwyde/home-ops/main/kubernetes/apps/observability/grafana/app/resources/cert-manager.json
          datasource: Prometheus
        external-secrets:
          # renovate: depName="External Secrets"
          gnetId: 21640
          revision: 4
          datasource:
            - { name: DS_METRICS, value: Prometheus }
        external-secrets-operator:
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
          datasource: Prometheus
      storage:
        minio:
          # renovate: depName="MinIO Dashboard"
          gnetId: 13502
          revision: 26
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        truenas-scale-cgroups:
          url: https://raw.githubusercontent.com/Supporterino/truenas-graphite-to-prometheus/refs/heads/main/dashboards/truenas_scale_cgroups.json
          datasource:
            - { name: DS_MIMIR, value: Prometheus }
        truenas-scale-disk-insights:
          url: https://raw.githubusercontent.com/Supporterino/truenas-graphite-to-prometheus/refs/heads/main/dashboards/truenas_scale_disk_insights.json
          datasource:
            - { name: DS_MIMIR, value: Prometheus }
        truenas-scale-temperatures:
          url: https://raw.githubusercontent.com/Supporterino/truenas-graphite-to-prometheus/refs/heads/main/dashboards/truenas_scale_temperatures.json
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        truenas-scale-overview:
          url: https://raw.githubusercontent.com/Supporterino/truenas-graphite-to-prometheus/refs/heads/main/dashboards/truenas_scale.json
          datasource:
            - { name: DS_MIMIR, value: Prometheus }
        volsync:
          # renovate: depName="Volsync"
          gnetId: 21356
          revision: 3
          datasource:
            - {name: DS_PROMETHEUS, value: Prometheus}
            - {name: VAR_REPLICATIONDESTNAME, value: ".*-rdst"}
      system:
        dcgm-exporter:
          url: https://raw.githubusercontent.com/pwyde/home-ops/main/kubernetes/apps/observability/grafana/app/resources/dcgm-exporter.json
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        gatus:
          url: https://raw.githubusercontent.com/pwyde/home-ops/main/kubernetes/apps/observability/grafana/app/resources/gatus.json
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 40
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        node-feature-discovery:
          url: https://raw.githubusercontent.com/kubernetes-sigs/node-feature-discovery/master/examples/grafana-dashboard.json
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        smartctl-exporter:
          # renovate: depName="SMARTctl Exporter Dashboard"
          gnetId: 22604
          revision: 2
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
      unifi:
        unifi-client-dpi:
          # renovate: depName="UniFi Client DPI: Prometheus Dashboard"
          gnetId: 11310
          revision: 5
          datasource: Prometheus
        unifi-sites:
          # renovate: depName="UniFi Sites: Prometheus Dashboard"
          gnetId: 11311
          revision: 5
          datasource: Prometheus
        unifi-usw:
          # renovate: depName="UniFi USW: Prometheus Dashboard"
          gnetId: 11312
          revision: 9
          datasource: Prometheus
        unifi-usg:
          # renovate: depName="UniFi USG: Prometheus Dashboard"
          gnetId: 11313
          revision: 9
          datasource: Prometheus
        unifi-uap:
          # renovate: depName="UniFi UAP: Prometheus Dashboard"
          gnetId: 11314
          revision: 10
          datasource: Prometheus
        unifi-clients:
          # renovate: depName="UniFi Clients: Prometheus Dashboard"
          gnetId: 11315
          revision: 9
          datasource: Prometheus
    resources:
      requests:
        cpu: 30m
        memory: 128Mi
      limits:
        memory: 192Mi
    sidecar:
      image:
        registry: ghcr.io
        repository: home-operations/k8s-sidecar
        tag: 1.30.3@sha256:39cca7abcad8f1621b9462d95f7d0e60301b92fcb0ff4de0ad4561859011cddf
      dashboards:
        enabled: true
        searchNamespace: ALL
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
      resources:
        requests:
          cpu: 10m
          memory: 96Mi
        limits:
          memory: 128Mi
    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: internal
      hosts:
        - &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
      tls:
        - hosts:
            - *host
    persistence:
      enabled: false
    testFramework:
      enabled: false
