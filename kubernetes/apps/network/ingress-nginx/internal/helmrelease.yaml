---
# yaml-language-server: $schema=https://home-kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app ingress-nginx-internal
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: ingress-nginx
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    fullnameOverride: *app
    controller:
      replicaCount: 2
      allowSnippetAnnotations: true
      enableAnnotationValidations: true
      extraEnvs:
        - name: TZ
          value: "${CONFIG_TIMEZONE}"
      extraArgs:
        default-ssl-certificate: "security/${SECRET_DOMAIN/./-}-production-tls"
      electionID: "ingress-internal-leader"
      ingressClassByName: true
      ingressClassResource:
        controllerValue: k8s.io/internal
        default: true
        enabled: true
        name: internal
      kind: Deployment
      service:
        annotations:
          lbipam.cilium.io/ips: ${SVC_NGINX_INTERNAL_IP}
        type: LoadBalancer
      admissionWebhooks:
        objectSelector:
          matchExpressions:
            - key: ingress-class
              operator: In
              values: ["internal"]
      config:
        annotations-risk-level: Critical
        client-body-buffer-size: "100M"
        client-body-timeout: 120
        client-header-timeout: 120
        enable-brotli: "true"
        enable-ocsp: "true"
        enable-real-ip: "true"
        force-ssl-redirect: "true"
        hide-headers: Server,X-Powered-By
        hsts-max-age: "31449600" # Must be quoted.
        keep-alive-requests: 10000
        keep-alive: 120
        log-format-escape-json: "true"
        log-format-upstream: >
          {"time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr", "x_forwarded_for": "$proxy_add_x_forwarded_for",
          "request_id": "$req_id", "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time,
          "status": $status, "vhost": "$host", "request_proto": "$server_protocol", "path": "$uri", "request_query": "$args",
          "request_length": $request_length, "duration": $request_time, "method": "$request_method", "http_referrer": "$http_referer",
          "http_user_agent": "$http_user_agent"}
        proxy-body-size: 0
        proxy-buffer-size: 16k
        proxy-read-timeout: 120
        proxy-send-timeout: 120
        ssl-protocols: "TLSv1.3 TLSv1.2"
        use-geoip2: false
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          namespace: network
          namespaceSelector:
            any: true
      resources:
        requests:
          cpu: 20m
          memory: 256Mi
        limits:
          memory: 768Mi
      terminationGracePeriodSeconds: 120
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
              app.kubernetes.io/instance: nginx-internal
              app.kubernetes.io/component: controller
