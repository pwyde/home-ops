---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app pgadmin
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      pgadmin:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          pgadmin:
            image:
              repository: docker.io/dpage/pgadmin4
              tag: 9.2@sha256:52cb72a9e3da275324ca0b9bb3891021366d501aad375db34584a7bca8ce02ff
            env:
              TZ: ${CONFIG_TIMEZONE}
              PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "False"
            envFrom:
              - secretRef:
                  name: *app
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /misc/ping
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 10m
                memory: 256Mi
              limits:
                memory: 384Mi
    defaultPodOptions:
      securityContext:
        # https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html#mapped-files-and-directories
        runAsNonRoot: true
        runAsUser: &uid 5050
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        type: configMap
        name: pgadmin-config
        globalMounts:
          - path: /pgadmin4/servers.json
            subPath: servers.json
            readOnly: true
      oauth:
        type: secret
        name: *app
        globalMounts:
          - path: /pgadmin4/config_local.py
            subPath: config_local.py
            readOnly: true
      pgadmin:
        existingClaim: ${VOLSYNC_CLAIM}
        globalMounts:
          - path: /var/lib/pgadmin

