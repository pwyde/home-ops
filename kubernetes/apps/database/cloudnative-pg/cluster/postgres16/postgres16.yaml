---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres16
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:16.6@sha256:85a67f3fb359752c59314344d1d3c5fd74ee332c6ad979679fcb7a32d047982d
  primaryUpdateStrategy: unsupervised
  storage:
    size: 20Gi
    storageClass: truenas-ssd-iscsi
  superuserSecret:
    name: cloudnative-pg
  enableSuperuserAccess: true
  postgresql:
    parameters:
      max_connections: "400"
      shared_buffers: 256MB
      idle_in_transaction_session_timeout: "300000"  # 5 min.
  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: true
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      memory: 2Gi
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 30d
    barmanObjectStore: &barmanObjectStore
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://cloudnative-pg/
      endpointURL: https://s3.${SECRET_DOMAIN}
      # Note: serverName version needs to be incremented when recovering from
      # an existing CloudNativePG cluster.
      serverName: &currentCluster postgres16-v4
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg
          key: s3-access-key
        secretAccessKey:
          name: cloudnative-pg
          key: s3-secret-key
  # Note: previousCluster needs to be set to the name of the previous cluster
  # when recovering from an existing CloudNativePG cluster.
  # bootstrap:
  #   recovery:
  #     source: &previousCluster postgres16-v3
  # Note: externalClusters is needed when recovering from an existing
  # CloudNativePG cluster.
  # externalClusters:
  #   - name: *previousCluster
  #     barmanObjectStore:
  #       <<: *barmanObjectStore
  #       serverName: *previousCluster
