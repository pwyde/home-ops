---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app romm
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      romm:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17
            envFrom: &envFrom
              - secretRef:
                  name: *app
        containers:
          romm:
            image:
              repository: ghcr.io/rommapp/romm
              tag: 3.8.3@sha256:2e46fcd1e6ba23e63889a642e82a4a4fbf8b560104029cd17edcefa672600676
            env:
              TZ: ${CONFIG_TIMEZONE}
              DISABLE_DOWNLOAD_ENDPOINT_AUTH: true
              DISABLE_USERPASS_LOGIN: false # Only set to true after first run and admin has been created.
              ENABLE_SCHEDULED_RESCAN: true
              SCHEDULED_RESCAN_CRON: "0 2 * * *"
              ENABLE_RESCAN_ON_FILESYSTEM_CHANGE: true
              RESCAN_ON_FILESYSTEM_CHANGE_DELAY: 5
              ROMM_BASE_PATH: /config
              ROMM_DB_DRIVER: postgresql
              REDIS_HOST: dragonfly.database.svc.cluster.local
              REDIS_PORT: 6379
              REDIS_DB: 6
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &port 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 100m
                memory: 512Mi
              limits:
                memory: 4Gi
            securityContext:
              allowPrivilegeEscalation: true
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid 5000
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [3000]
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        existingClaim: ${VOLSYNC_CLAIM}
      games:
        type: nfs
        server: ${SECRET_NAS_IP}
        path: ${SECRET_NFS_PATH_GAMES}
        globalMounts:
          - path: /config/library
      tmp:
        type: emptyDir
