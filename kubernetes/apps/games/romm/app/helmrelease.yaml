---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: romm
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      romm:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17
            envFrom: &envFrom
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
        containers:
          app:
            image:
              repository: ghcr.io/rommapp/romm
              tag: 4.3.0@sha256:a492592dad85b7d9bae9fca9ac958eb04492e383002abbd3566a7efb3b251091
            env:
              TZ: Europe/Stockholm
              # Used for Tinfoil Integration. For more information, see https://docs.romm.app/latest/Integrations/Tinfoil-integration/?h=disable_download_endpoint_auth
              DISABLE_DOWNLOAD_ENDPOINT_AUTH: true
              # Only set to true after first run and admin has been created.
              DISABLE_USERPASS_LOGIN: false
              ENABLE_RESCAN_ON_FILESYSTEM_CHANGE: true
              ENABLE_SCHEDULED_CONVERT_IMAGES_TO_WEBP: true
              ENABLE_SCHEDULED_RESCAN: true
              HASHEOUS_API_ENABLED: true
              PLAYMATCH_API_ENABLED: true
              REDIS_HOST: dragonfly.database.svc.cluster.local
              REDIS_PORT: 6379
              REDIS_DB: 4
              RESCAN_ON_FILESYSTEM_CHANGE_DELAY: 5
              ROMM_DB_DRIVER: postgresql
              SCHEDULED_RESCAN_CRON: "0 2 * * *"
              TASK_TIMEOUT: 3600
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &port 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 100m
                memory: 512Mi
              limits:
                memory: 4Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: &uid 5000
        runAsGroup: *uid
        fsGroup: *uid
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 3000
    persistence:
      nginx-conf:
        type: emptyDir
        globalMounts:
          - path: /etc/nginx/conf.d
      romm-data:
        existingClaim: "{{ .Release.Name }}"
        globalMounts:
          - path: /romm
            readOnly: false
      romm-config:
        type: emptyDir
        globalMounts:
          - path: /romm/config
      romm-config-file:
        type: configMap
        name: "{{ .Release.Name }}-configmap"
        defaultMode: 0664
        globalMounts:
          - path: /romm/config/config.yml
            subPath: config.yml
            readOnly: true
      romm-assets:
        type: nfs
        server: nas.${SECRET_DOMAIN}
        path: /mnt/hdd-data/Games/RomM/Assets
        globalMounts:
          - path: /romm/assets
      romm-library:
        type: nfs
        server: nas.${SECRET_DOMAIN}
        path: /mnt/hdd-data/Games/RomM/Library
        globalMounts:
          - path: /romm/library
      romm-resources:
        type: nfs
        server: nas.${SECRET_DOMAIN}
        path: /mnt/hdd-data/Games/RomM/Resources
        globalMounts:
          - path: /romm/resources
      tmp:
        type: emptyDir
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.${SECRET_DOMAIN}"
        parentRefs:
          - name: envoy-internal
            namespace: network
            sectionName: https
    service:
      app:
        ports:
          http:
            port: *port
