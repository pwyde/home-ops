---
version: v1alpha1
machine:
  type: controlplane
  token: op://Kubernetes/talos/MACHINE_TOKEN
  ca:
    crt: op://Kubernetes/talos/MACHINE_CA_CRT
    key: op://Kubernetes/talos/MACHINE_CA_KEY
  certSANs:
    - 127.0.0.1
    - 192.168.20.20
    - home-k8s.wyde.network
  features:
    apidCheckExtKeyUsage: true
    diskQuotaSupport: true
    hostDNS:
      enabled: true
      forwardKubeDNSToHost: false
      resolveMemberNames: true
    kubePrism:
      enabled: true
      port: 7445
    kubernetesTalosAPIAccess:
      allowedKubernetesNamespaces:
        - actions-runner-system
        - system-upgrade
      allowedRoles:
        - os:admin
      enabled: true
    rbac: true
    stableHostname: true
  files:
    - op: create
      path: /etc/cri/conf.d/20-customization.part
      content: |
        [plugins."io.containerd.cri.v1.images"]
          discard_unpacked_layers = false
        [plugins."io.containerd.cri.v1.runtime"]
          device_ownership_from_security_context = true
    - op: overwrite
      path: /etc/nfsmount.conf
      permissions: 0o644
      content: |
        [ NFSMount_Global_Options ]
        nfsvers=4.1
        hard=True
        nconnect=8
        noatime=True
        rsize=1048576
        wsize=1048576
  install:
    diskSelector:
      serial: S666NT0Y523232
    image: factory.talos.dev/metal-installer-secureboot/0392e7a1190fee2170875a206d210840f556258efd07d6ca9a4d6326e62647fd:v1.11.3
  kernel:
    modules:
      - name: nbd
  kubelet:
    defaultRuntimeSeccompProfileEnabled: true
    disableManifestsDirectory: true
    extraConfig:
      featureGates:
        ImageVolume: true
      maxPods: 250
      serializeImagePulls: false
    image: ghcr.io/siderolabs/kubelet:v1.34.1
    nodeIP:
      validSubnets:
        - 192.168.20.0/24
  network:
    disableSearchDomain: true
    hostname: k8s-1
    interfaces:
      - interface: bond0
        addresses:
          - 192.168.20.21/24
        bond:
          deviceSelectors:
            - hardwareAddr: 38:05:25:30:83:*
              driver: i40e
          lacpRate: fast
          mode: 802.3ad
          miimon: 1000
          xmitHashPolicy: layer3+4
        dhcp: false
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: 192.168.20.1
    nameservers:
      - 192.168.20.1
  nodeLabels:
    gpu.home-ops/amd: true
    gpu.home-ops/nvidia: false
    topology.kubernetes.io/region: k8s
    topology.kubernetes.io/zone: m
  sysctls:
    fs.inotify.max_user_instances: "8192" # Watchdog
    fs.inotify.max_user_watches: "1048576" # Watchdog
    net.core.default_qdisc: fq # 10Gb/s
    net.core.rmem_max: "67108864" # 10Gb/s | Cloudflared / QUIC
    net.core.wmem_max: "67108864" # 10Gb/s | Cloudflared / QUIC
    net.ipv4.neigh.default.gc_thresh1: "4096" # Prevent ARP cache overflows
    net.ipv4.neigh.default.gc_thresh2: "8192" # Prevent ARP cache overflows
    net.ipv4.neigh.default.gc_thresh3: "16384" # Prevent ARP cache overflows
    net.ipv4.tcp_congestion_control: bbr # 10Gb/s
    net.ipv4.tcp_fastopen: "3" # Send and accept data in the opening SYN packet
    net.ipv4.tcp_mtu_probing: "1" # 10Gb/s | Jumbo frames
    net.ipv4.tcp_rmem: 4096 87380 33554432 # 10Gb/s
    net.ipv4.tcp_wmem: 4096 65536 33554432 # 10Gb/s
    net.ipv4.tcp_window_scaling: "1" # 10Gb/s
    sunrpc.tcp_slot_table_entries: "128" # 10Gb/s | NFS
    sunrpc.tcp_max_slot_table_entries: "128" # 10Gb/s | NFS
    user.max_user_namespaces: "11255" # User namespaces
    vm.nr_hugepages: "1024" # PostgreSQL
  time:
    disabled: false
    servers:
      - time.cloudflare.com
cluster:
  ca:
    crt: op://Kubernetes/talos/CLUSTER_CA_CRT
    key: op://Kubernetes/talos/CLUSTER_CA_KEY
  clusterName: home-k8s
  controlPlane:
    endpoint: https://home-k8s.wyde.network:6443
  discovery:
    enabled: true
    registries:
      kubernetes: {disabled: true}
      service: {disabled: false}
  id: op://Kubernetes/talos/CLUSTER_ID
  network:
    cni:
      name: none
    dnsDomain: cluster.local
    podSubnets:
      - 10.42.0.0/16
    serviceSubnets:
      - 10.43.0.0/16
  secret: op://Kubernetes/talos/CLUSTER_SECRET
  token: op://Kubernetes/talos/CLUSTER_TOKEN
  aggregatorCA:
    crt: op://Kubernetes/talos/CLUSTER_AGGREGATORCA_CRT
    key: op://Kubernetes/talos/CLUSTER_AGGREGATORCA_KEY
  allowSchedulingOnControlPlanes: true
  apiServer:
    auditPolicy:
      apiVersion: audit.k8s.io/v1
      kind: Policy
      rules:
        - level: Metadata
    certSANs:
      - 127.0.0.1
      - 192.168.20.20
      - home-k8s.wyde.network
    disablePodSecurityPolicy: true
    extraArgs:
      enable-aggregator-routing: true
      feature-gates: ImageVolume=true,MutatingAdmissionPolicy=true
      runtime-config: admissionregistration.k8s.io/v1beta1=true
    image: registry.k8s.io/kube-apiserver:v1.34.1
  controllerManager:
    image: registry.k8s.io/kube-controller-manager:v1.34.1
    extraArgs:
      bind-address: 0.0.0.0
  coreDNS:
    disabled: true
  etcd:
    advertisedSubnets:
      - 192.168.20.0/24
    ca:
      crt: op://Kubernetes/talos/CLUSTER_ETCD_CA_CRT
      key: op://Kubernetes/talos/CLUSTER_ETCD_CA_KEY
    extraArgs:
      listen-metrics-urls: http://0.0.0.0:2381
  proxy:
    disabled: true
    image: registry.k8s.io/kube-proxy:v1.34.1
  scheduler:
    config:
      apiVersion: kubescheduler.config.k8s.io/v1
      kind: KubeSchedulerConfiguration
      profiles:
        - schedulerName: default-scheduler
          plugins:
            score:
              disabled:
                - name: ImageLocality
          pluginConfig:
            - name: PodTopologySpread
              args:
                defaultingType: List
                defaultConstraints:
                  - maxSkew: 1
                    topologyKey: kubernetes.io/hostname
                    whenUnsatisfiable: ScheduleAnyway
    extraArgs:
      bind-address: 0.0.0.0
    image: registry.k8s.io/kube-scheduler:v1.34.1
  secretboxEncryptionSecret: op://Kubernetes/talos/CLUSTER_SECRETBOXENCRYPTIONSECRET
  serviceAccount:
    key: op://Kubernetes/talos/CLUSTER_SERVICEACCOUNT_KEY
---
apiVersion: v1alpha1
kind: EthernetConfig
name: enp5s0f0np0
rings: {rx: 8160, tx: 8160}
---
apiVersion: v1alpha1
kind: EthernetConfig
name: enp5s0f1np1
rings: {rx: 8160, tx: 8160}
---
apiVersion: v1alpha1
kind: VolumeConfig
name: STATE
encryption:
  provider: luks2
  keys:
    - slot: 0
      tpm:
        checkSecurebootStatusOnEnroll: true
---
apiVersion: v1alpha1
kind: VolumeConfig
name: EPHEMERAL
encryption:
  provider: luks2
  keys:
    - slot: 0
      tpm:
        checkSecurebootStatusOnEnroll: true
provisioning:
  diskSelector:
    match: disk.model == "SAMSUNG MZ1L21T9HCLS-00A07"
  minSize: 20GB
  maxSize: 256GB # Limit EPHEMERAL to 256GB.
  grow: false # Do not auto-grow.
---
apiVersion: v1alpha1
kind: UserVolumeConfig
name: local-hostpath
encryption:
  provider: luks2
  keys:
    - slot: 0
      tpm:
        checkSecurebootStatusOnEnroll: true
provisioning:
  diskSelector:
    match: disk.model == "SAMSUNG MZ1L21T9HCLS-00A07"
  minSize: 1.0TB
---
apiVersion: v1alpha1
kind: WatchdogTimerConfig
device: /dev/watchdog0
timeout: 5m
